{"version":3,"file":"static/js/450.33c7fb2c.chunk.js","mappings":"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","sources":["components/Api.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/Movie.module.css?ed9b","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '19d2d0f24e837c8f3ad6ea805c1086b1';\n\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return data.results;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getCastsDetails = async  movieId => {\nconst {data} = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return data.cast;\n};\n\nexport const getReviewsDetails =async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getSearchMovie = async query => {\nconst {data} = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_form\":\"SearchBar_search_form__JD4pT\",\"container_form\":\"SearchBar_container_form__Jw+G9\",\"input\":\"SearchBar_input__bIy50\",\"search_button\":\"SearchBar_search_button__nzXi6\",\"title\":\"SearchBar_title__l+gon\"};","/* eslint-disable no-undef */\nimport { useState } from 'react';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ onSearch }) => {\n  const [movie, setMovie] = useState('');\n\n  const handleChangeQuery = e => {\n    setMovie(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movie.trim() === '') {\n      return alert('Enter data for search');\n    }\n\n    onSearch(movie);\n    setMovie('');\n  };\n\n  return (\n    <div className={css.container_form}>\n      <p className={css.title}>Please, enter name of movie for search</p>\n      <form onSubmit={handleSubmit} className={css.search_form}>\n        <input\n          type=\"text\"\n          name=\"movie\"\n          value={movie}\n          onChange={handleChangeQuery}\n          autoComplete=\"off\"\n          autoFocus\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.search_button}>\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"section_movies\":\"Movie_section_movies__5mvkq\",\"container_movie\":\"Movie_container_movie__F1GFJ\",\"list\":\"Movie_list__3jSH+\",\"item\":\"Movie_item__uYRzM\",\"link\":\"Movie_link__XtdTs\",\"img\":\"Movie_img__PWLne\",\"text\":\"Movie_text__65fbV\"};","/* eslint-disable no-undef */\nimport { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'components/Api';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport noImage from '../../noImage.jpeg';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './Movie.module.css';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n      const getSearchMovieId = async () => {\n        try {\n          const data = await getSearchMovie(searchQuery);\n        if (data.length === 0) {\n          toast.error(`There are no movies on your request \"${searchQuery}\"`);\n          setMovies([]);\n        }\n          setMovies(data);\n        } catch (error) {\n          throw new Error('...ooopppsssss');\n        }\n        \n      }; getSearchMovieId();\n    \n\n\n\n    // getSearchMovie(searchQuery)\n    //   .then(({ data }) => {\n    //     if (data.results.length === 0) {\n    //       toast.error(`There are no movies on your request \"${searchQuery}\"`);\n    //       setMovies([]);\n    //     }\n    //     setMovies(data.results);\n    //   })\n    //   .catch(error => {\n    //     throw new Error('...ooopppsssss');\n    //   });\n  }, [searchQuery]);\n\n  const onSubmit = searchQuery => {\n    setSearchParams({ query: `${searchQuery}` });\n  };\n\n  return (\n    <section className={css.section_movies}>\n      <SearchBar onSearch={onSubmit} />\n      <div className={css.container_movie}>\n        {movies && (\n          <>\n            <ul className={css.list}>\n              {movies.map(({ id, poster_path, title }) => (\n                <li key={id} className={css.item}>\n                  <Link\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                    className={css.link}\n                  >\n                    <img\n                      className={css.img}\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                          : noImage\n                      }\n                      alt={title}\n                    />\n                    <p className={css.text}>{title}</p>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Movie;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","results","stop","apply","arguments","getMovieDetails","_ref2","_callee2","movieId","_yield$axios$get2","_context2","_x","getCastsDetails","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x2","getReviewsDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getSearchMovie","_ref5","_callee5","query","_yield$axios$get5","_context5","_x4","onSearch","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","getSearchMovieId","length","toast","t0","Error","SearchBar","_Fragment","map","id","poster_path","title","Link","to","state","from","src","noImage","alt"],"sourceRoot":""}